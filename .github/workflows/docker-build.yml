name: Build and Push Docker Image
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master
env:
  VERSION: latest
jobs:
  build:
    name: Build Go Application
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      # Build the application
      - name: Build Go Application
        run: |
          go mod tidy
          go build -o app .
  docker-build:
    name: Build and push Docker Image
    runs-on: ubuntu-latest
    needs: build # Ensure this job runs after "build"

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        if: ${{ github.event_name == 'push' &&
          github.ref == 'refs/heads/master' &&
          github.repository_owner == 'r3kzi'
          }}
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Set the Docker image version
      - name: Set docker version
        id: vars
        run: |
          [[ "${{ github.ref_type }}" == "tag" ]] && VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,;s/^v//')
          echo "version=${VERSION:-latest}" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build grafana image and push to Github Container Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'push' &&
              github.ref == 'refs/heads/master' &&
              github.repository_owner == 'r3kzi' }}
          platforms: linux/arm/v7,linux/arm64/v8,linux/amd64
          tags: |
            rekzi/clamav-prometheus-exporter:${{ steps.vars.outputs.sha_short }}
            rekzi/clamav-prometheus-exporter:${{ steps.vars.outputs.version }}
